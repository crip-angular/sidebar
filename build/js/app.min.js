angular.module("crip.treeView.templates",[]).run(["$templateCache",function(e){e.put("/crip/tree-view/node.html",'<i class="fa fa-folder fa-lg" ng-if="node.type == \'dir\'"></i>\n<i class="fa fa-file-o fa-lg" ng-if="node.type == \'file\'"></i>\n<a href="#">{{ node.name }}</a>\n<ul ng-if="node.type == \'dir\' && node.children">\n    <li class="{{ node.type }}" ng-repeat="node in node.children" ng-include="\'/crip/tree-view/node.html\'"></li>\n</ul>\n'),e.put("/crip/tree-view/tree.html",'<ul class="tree">\n    <li class="{{ node.type }}" ng-repeat="node in data" ng-include="\'/crip/tree-view/node.html\'"></li>\n</ul>\n')}]),function(e,n){"use strict";n.treeView=e.module("crip.tree-view",["crip.treeView.templates"])}(angular,window.crip||(window.crip={})),function(e,n){"use strict";function t(n,t){function i(n,t,i,r){t.on("click",function(n){var t="LI"==n.target.tagName?e.element(n.target):e.element(n.target.parentNode);t.hasClass("dir")&&(t.find("i").eq(0).toggleClass("fa-folder fa-folder-open"),t.find("ul").eq(0).toggleClass("opened"))})}return{restrict:"EA",scope:{data:"="},templateUrl:"/crip/tree-view/tree.html",link:i}}n.treeView.directive("tree",t),t.$inject=["$log","$document"]}(angular,window.crip);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvdGVtcGxhdGVzL3RlbXBsYXRlcy5qcyIsIi9zb3VyY2UvYXNzZXRzL2pzL3RyZWUtdmlldy5tb2R1bGUuanMiLCIvc291cmNlL2Fzc2V0cy9qcy9kaXJlY3RpdmVzL3RyZWUuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiR0ZW1wbGF0ZUNhY2hlIiwicHV0IiwibmciLCJjcmlwIiwidHJlZVZpZXciLCJ3aW5kb3ciLCJ0cmVlIiwiJGxvZyIsIiRkb2N1bWVudCIsImxpbmsiLCJzY29wZSIsImVsZW1lbnQiLCJhdHRyIiwiY3RybHMiLCJvbiIsImUiLCJsaSIsInRhcmdldCIsInRhZ05hbWUiLCJwYXJlbnROb2RlIiwiaGFzQ2xhc3MiLCJmaW5kIiwiZXEiLCJ0b2dnbGVDbGFzcyIsInJlc3RyaWN0IiwiZGF0YSIsInRlbXBsYXRlVXJsIiwiZGlyZWN0aXZlIiwiJGluamVjdCJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQUFDLE9BQUEsOEJBQUFDLEtBQUEsaUJBQUEsU0FBQUMsR0FBQUEsRUFBQUMsSUFBQSw0QkFBQSx1VkFDQUQsRUFBQUMsSUFBQSw0QkFBQSw0SUNEQSxTQUFBQyxFQUFBQyxHQUVBLFlBRUFBLEdBQUFDLFNBQUFGLEVBQUFKLE9BQUEsa0JBQ0EsNkJBR0FELFFBQUFRLE9BQUFGLE9BQUFFLE9BQUFGLFVDUkEsU0FBQUQsRUFBQUMsR0FFQSxZQVdBLFNBQUFHLEdBQUFDLEVBQUFDLEdBZUEsUUFBQUMsR0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FDQUYsRUFBQUcsR0FBQSxRQUFBLFNBQUFDLEdBQ0EsR0FBQUMsR0FBQSxNQUFBRCxFQUFBRSxPQUFBQyxRQUNBaEIsRUFBQVMsUUFBQUksRUFBQUUsUUFDQWYsRUFBQVMsUUFBQUksRUFBQUUsT0FBQUUsV0FDQUgsR0FBQUksU0FBQSxTQUNBSixFQUFBSyxLQUFBLEtBQUFDLEdBQUEsR0FBQUMsWUFBQSw0QkFDQVAsRUFBQUssS0FBQSxNQUFBQyxHQUFBLEdBQUFDLFlBQUEsYUFwQkEsT0FDQUMsU0FBQSxLQUNBZCxPQUNBZSxLQUFBLEtBRUFDLFlBQUEsNEJBQ0FqQixLQUFBQSxHQWpCQU4sRUFBQUMsU0FDQXVCLFVBQUEsT0FBQXJCLEdBRUFBLEVBQUFzQixTQUFBLE9BQUEsY0FtQ0EvQixRQUFBUSxPQUFBRiIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoXCJjcmlwLnRyZWVWaWV3LnRlbXBsYXRlc1wiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7JHRlbXBsYXRlQ2FjaGUucHV0KFwiL2NyaXAvdHJlZS12aWV3L25vZGUuaHRtbFwiLFwiPGkgY2xhc3M9XFxcImZhIGZhLWZvbGRlciBmYS1sZ1xcXCIgbmctaWY9XFxcIm5vZGUudHlwZSA9PSBcXCdkaXJcXCdcXFwiPjwvaT5cXG48aSBjbGFzcz1cXFwiZmEgZmEtZmlsZS1vIGZhLWxnXFxcIiBuZy1pZj1cXFwibm9kZS50eXBlID09IFxcJ2ZpbGVcXCdcXFwiPjwvaT5cXG48YSBocmVmPVxcXCIjXFxcIj57eyBub2RlLm5hbWUgfX08L2E+XFxuPHVsIG5nLWlmPVxcXCJub2RlLnR5cGUgPT0gXFwnZGlyXFwnICYmIG5vZGUuY2hpbGRyZW5cXFwiPlxcbiAgICA8bGkgY2xhc3M9XFxcInt7IG5vZGUudHlwZSB9fVxcXCIgbmctcmVwZWF0PVxcXCJub2RlIGluIG5vZGUuY2hpbGRyZW5cXFwiIG5nLWluY2x1ZGU9XFxcIlxcJy9jcmlwL3RyZWUtdmlldy9ub2RlLmh0bWxcXCdcXFwiPjwvbGk+XFxuPC91bD5cXG5cIik7XG4kdGVtcGxhdGVDYWNoZS5wdXQoXCIvY3JpcC90cmVlLXZpZXcvdHJlZS5odG1sXCIsXCI8dWwgY2xhc3M9XFxcInRyZWVcXFwiPlxcbiAgICA8bGkgY2xhc3M9XFxcInt7IG5vZGUudHlwZSB9fVxcXCIgbmctcmVwZWF0PVxcXCJub2RlIGluIGRhdGFcXFwiIG5nLWluY2x1ZGU9XFxcIlxcJy9jcmlwL3RyZWUtdmlldy9ub2RlLmh0bWxcXCdcXFwiPjwvbGk+XFxuPC91bD5cXG5cIik7fV0pOyIsIihmdW5jdGlvbiAobmcsIGNyaXApIHtcblx0XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgY3JpcC50cmVlVmlldyA9IG5nLm1vZHVsZSgnY3JpcC50cmVlLXZpZXcnLCBbXG5cdFx0J2NyaXAudHJlZVZpZXcudGVtcGxhdGVzJ1xuICAgIF0pO1xuXG59KShhbmd1bGFyLCB3aW5kb3cuY3JpcCB8fCAod2luZG93LmNyaXAgPSB7fSkpO1xuIiwiKGZ1bmN0aW9uIChuZywgY3JpcCkgeyAgXG5cbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBjcmlwLnRyZWVWaWV3XG4gICAgICAgIC5kaXJlY3RpdmUoJ3RyZWUnLCB0cmVlKTtcblxuICAgIHRyZWUuJGluamVjdCA9IFsnJGxvZycsICckZG9jdW1lbnQnXTtcblxuICAgIC8qKlxuICAgICAqIFRyZWUgZGlyZWN0aXZlXG4gICAgICpcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0cmVlKCRsb2csICRkb2N1bWVudCkge1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZXN0cmljdDogJ0VBJywgICAgICAgIFxuICAgICAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgICAgICBkYXRhOiAnPSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jcmlwL3RyZWUtdmlldy90cmVlLmh0bWwnLFxuICAgICAgICAgICAgbGluazogbGluayxcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogTGlua1xuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gbGluayhzY29wZSwgZWxlbWVudCwgYXR0ciwgY3RybHMpIHtcbiAgICAgICAgICAgIGVsZW1lbnQub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHsgICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciBsaSA9IChlLnRhcmdldC50YWdOYW1lID09ICdMSScpXG4gICAgICAgICAgICAgICAgICAgID8gbmcuZWxlbWVudChlLnRhcmdldClcbiAgICAgICAgICAgICAgICAgICAgOiBuZy5lbGVtZW50KGUudGFyZ2V0LnBhcmVudE5vZGUpO1xuICAgICAgICAgICAgICAgIGlmIChsaS5oYXNDbGFzcygnZGlyJykpIHtcbiAgICAgICAgICAgICAgICAgICAgbGkuZmluZCgnaScpLmVxKDApLnRvZ2dsZUNsYXNzKCdmYS1mb2xkZXIgZmEtZm9sZGVyLW9wZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgbGkuZmluZCgndWwnKS5lcSgwKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgIH1cblxufSkgKGFuZ3VsYXIsIHdpbmRvdy5jcmlwKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
